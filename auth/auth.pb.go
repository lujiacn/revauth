// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthRequest struct {
	Account              string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthReply struct {
	IsAuthenticated      bool     `protobuf:"varint,1,opt,name=isAuthenticated,proto3" json:"isAuthenticated,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Account              string   `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	First                string   `protobuf:"bytes,5,opt,name=first,proto3" json:"first,omitempty"`
	Last                 string   `protobuf:"bytes,6,opt,name=last,proto3" json:"last,omitempty"`
	Email                string   `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Depart               string   `protobuf:"bytes,8,opt,name=depart,proto3" json:"depart,omitempty"`
	Avatar               string   `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthReply) Reset()         { *m = AuthReply{} }
func (m *AuthReply) String() string { return proto.CompactTextString(m) }
func (*AuthReply) ProtoMessage()    {}
func (*AuthReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *AuthReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthReply.Unmarshal(m, b)
}
func (m *AuthReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthReply.Marshal(b, m, deterministic)
}
func (m *AuthReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthReply.Merge(m, src)
}
func (m *AuthReply) XXX_Size() int {
	return xxx_messageInfo_AuthReply.Size(m)
}
func (m *AuthReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthReply.DiscardUnknown(m)
}

var xxx_messageInfo_AuthReply proto.InternalMessageInfo

func (m *AuthReply) GetIsAuthenticated() bool {
	if m != nil {
		return m.IsAuthenticated
	}
	return false
}

func (m *AuthReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *AuthReply) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *AuthReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AuthReply) GetFirst() string {
	if m != nil {
		return m.First
	}
	return ""
}

func (m *AuthReply) GetLast() string {
	if m != nil {
		return m.Last
	}
	return ""
}

func (m *AuthReply) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AuthReply) GetDepart() string {
	if m != nil {
		return m.Depart
	}
	return ""
}

func (m *AuthReply) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthRequest)(nil), "AuthRequest")
	proto.RegisterType((*AuthReply)(nil), "AuthReply")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4e, 0x84, 0x40,
	0x10, 0x45, 0x45, 0x19, 0x06, 0xca, 0x49, 0x4c, 0x3a, 0xc6, 0x54, 0x66, 0x65, 0x58, 0x4d, 0x5c,
	0xb0, 0x18, 0x4f, 0x60, 0xbc, 0x01, 0x37, 0x28, 0xa1, 0xcd, 0x90, 0x30, 0x34, 0x56, 0x17, 0x1a,
	0x8f, 0xec, 0x2d, 0x4c, 0x57, 0x23, 0xc1, 0xd9, 0xd5, 0xfb, 0x5d, 0xf9, 0xf5, 0xfb, 0x03, 0xd0,
	0x24, 0xa7, 0x6a, 0x64, 0x27, 0xae, 0x7c, 0x85, 0xdb, 0x97, 0x49, 0x4e, 0xb5, 0xfd, 0x98, 0xac,
	0x17, 0x83, 0xb0, 0xa5, 0xa6, 0x71, 0xd3, 0x20, 0x98, 0x3c, 0x26, 0x87, 0xa2, 0xfe, 0x43, 0xb3,
	0x87, 0x7c, 0x24, 0xef, 0xbf, 0x1c, 0xb7, 0x78, 0xad, 0x4f, 0x0b, 0x97, 0x3f, 0x09, 0x14, 0xd1,
	0x65, 0xec, 0xbf, 0xcd, 0x01, 0xee, 0x3a, 0x1f, 0xd0, 0x0e, 0xd2, 0x35, 0x24, 0xb6, 0x55, 0xaf,
	0xbc, 0xbe, 0x94, 0xcd, 0x3d, 0x6c, 0x2c, 0xb3, 0xe3, 0xd9, 0x30, 0xc2, 0x3a, 0xc3, 0xcd, 0xff,
	0x0c, 0x06, 0xd2, 0x81, 0xce, 0x16, 0x53, 0x95, 0x75, 0x0e, 0x1e, 0xef, 0x1d, 0x7b, 0xc1, 0x4d,
	0xf4, 0x50, 0x08, 0x9b, 0x3d, 0x79, 0xc1, 0x2c, 0x6e, 0x86, 0x59, 0xaf, 0x9d, 0xa9, 0xeb, 0x71,
	0x3b, 0x5f, 0x0b, 0x60, 0x1e, 0x20, 0x6b, 0xed, 0x48, 0x2c, 0x98, 0xab, 0x3c, 0x53, 0xd0, 0xe9,
	0x93, 0x84, 0x18, 0x8b, 0xa8, 0x47, 0x3a, 0x1e, 0x21, 0x0d, 0xf5, 0x99, 0x27, 0xd8, 0xd1, 0xea,
	0x33, 0x66, 0x57, 0xad, 0x7a, 0xdc, 0x43, 0xb5, 0xf4, 0x51, 0x5e, 0xbd, 0x65, 0xda, 0xf5, 0xf3,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xea, 0x56, 0xe6, 0x1f, 0x79, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error) {
	out := new(AuthReply)
	err := c.cc.Invoke(ctx, "/auth/authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	Authenticate(context.Context, *AuthRequest) (*AuthReply, error)
}

// UnimplementedAuthServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServer struct {
}

func (*UnimplementedAuthServer) Authenticate(ctx context.Context, req *AuthRequest) (*AuthReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Authenticate(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "authenticate",
			Handler:    _Auth_Authenticate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
